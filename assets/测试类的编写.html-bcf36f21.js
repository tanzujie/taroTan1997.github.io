const t=JSON.parse('{"key":"v-3f92ae77","path":"/%E6%B5%8B%E8%AF%95%E7%B1%BB%E7%9A%84%E7%BC%96%E5%86%99.html","title":"","lang":"zh-CN","frontmatter":{"description":"我会帮你创建一个测试方法来测试 rail_control_node.py。我们将使用模拟的传感器信号和回调来测试这个节点的功能。我们会创建一个完整的测试类，包括模拟传感器数据和消息。 这个测试文件实现了以下功能： 创建了模拟的传感器类： MockGasSensor: 模拟气体传感器 MockTemperatureSensor: 模拟温度和湿度传感器 MockMotorDriver: 模拟电机驱动 MockSliderRobot: 模拟导轨机器人 创建了TestPublisher类用于发布模拟的相机数据，包括： 模拟的Orbbec相机数据（深度图像和彩色图像） 模拟的热成像数据 实现了完整的测试用例集： test_initialization: 测试节点初始化 test_move_to_next_position: 测试位置移动 test_sensor_data_collection: 测试传感器数据收集 test_immediate_inspection_mode: 测试即时检查模式 test_inspection_service: 测试检查服务 test_error_handling: 测试错误处理 test_data_upload: 测试数据上传 使用了Python的unittest框架和mock库来模拟依赖","head":[["meta",{"property":"og:url","content":"https://zxy.wsn640.top/%E6%B5%8B%E8%AF%95%E7%B1%BB%E7%9A%84%E7%BC%96%E5%86%99.html"}],["meta",{"property":"og:site_name","content":"zxy"}],["meta",{"property":"og:description","content":"我会帮你创建一个测试方法来测试 rail_control_node.py。我们将使用模拟的传感器信号和回调来测试这个节点的功能。我们会创建一个完整的测试类，包括模拟传感器数据和消息。 这个测试文件实现了以下功能： 创建了模拟的传感器类： MockGasSensor: 模拟气体传感器 MockTemperatureSensor: 模拟温度和湿度传感器 MockMotorDriver: 模拟电机驱动 MockSliderRobot: 模拟导轨机器人 创建了TestPublisher类用于发布模拟的相机数据，包括： 模拟的Orbbec相机数据（深度图像和彩色图像） 模拟的热成像数据 实现了完整的测试用例集： test_initialization: 测试节点初始化 test_move_to_next_position: 测试位置移动 test_sensor_data_collection: 测试传感器数据收集 test_immediate_inspection_mode: 测试即时检查模式 test_inspection_service: 测试检查服务 test_error_handling: 测试错误处理 test_data_upload: 测试数据上传 使用了Python的unittest框架和mock库来模拟依赖"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-03T13:05:30.000Z"}],["meta",{"property":"article:author","content":"孤悲"}],["meta",{"property":"article:modified_time","content":"2025-02-03T13:05:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-03T13:05:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孤悲\\",\\"url\\":\\"https://zxy.wsn640.top\\"}]}"]]},"headers":[],"git":{"createdTime":1738587930000,"updatedTime":1738587930000,"contributors":[{"name":"tanzj","email":"tanzj@192.168.124.8","commits":1}]},"readingTime":{"minutes":1.57,"words":471},"filePathRelative":"测试类的编写.md","localizedDate":"2025年2月3日","excerpt":"<p>我会帮你创建一个测试方法来测试 rail_control_node.py。我们将使用模拟的传感器信号和回调来测试这个节点的功能。我们会创建一个完整的测试类，包括模拟传感器数据和消息。</p>\\n<p>这个测试文件实现了以下功能：</p>\\n<ol>\\n<li>\\n<p>创建了模拟的传感器类：</p>\\n<ul>\\n<li>MockGasSensor: 模拟气体传感器</li>\\n<li>MockTemperatureSensor: 模拟温度和湿度传感器</li>\\n<li>MockMotorDriver: 模拟电机驱动</li>\\n<li>MockSliderRobot: 模拟导轨机器人</li>\\n</ul>\\n</li>\\n<li>\\n<p>创建了TestPublisher类用于发布模拟的相机数据，包括：</p>\\n<ul>\\n<li>模拟的Orbbec相机数据（深度图像和彩色图像）</li>\\n<li>模拟的热成像数据</li>\\n</ul>\\n</li>\\n<li>\\n<p>实现了完整的测试用例集：</p>\\n<ul>\\n<li>test_initialization: 测试节点初始化</li>\\n<li>test_move_to_next_position: 测试位置移动</li>\\n<li>test_sensor_data_collection: 测试传感器数据收集</li>\\n<li>test_immediate_inspection_mode: 测试即时检查模式</li>\\n<li>test_inspection_service: 测试检查服务</li>\\n<li>test_error_handling: 测试错误处理</li>\\n<li>test_data_upload: 测试数据上传</li>\\n</ul>\\n</li>\\n<li>\\n<p>使用了Python的unittest框架和mock库来模拟依赖</p>\\n</li>\\n</ol>","autoDesc":true}');export{t as data};
