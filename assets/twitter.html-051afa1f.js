import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as a,c as d,b as e,e as n,d as t,w as h,a as s}from"./app-8cf4862e.js";const u={},m={href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/xitu/gold-miner",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/XatMassacrE",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/L9m",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/Airmacho",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/xiaoyusilen",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/jifaxu",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/sqrthree",target:"_blank",rel:"noopener noreferrer"},f=e("h1",{id:"设计推特时间轴与搜索功能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#设计推特时间轴与搜索功能","aria-hidden":"true"},"#"),n(" 设计推特时间轴与搜索功能")],-1),B={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%BB%E9%A2%98%E7%9A%84%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"},v=s('<p><strong>设计 Facebook 的 feed</strong> 与<strong>设计 Facebook 搜索</strong>与此为同一类型问题。</p><h2 id="第一步-简述用例与约束条件" tabindex="-1"><a class="header-anchor" href="#第一步-简述用例与约束条件" aria-hidden="true">#</a> 第一步：简述用例与约束条件</h2><blockquote><p>搜集需求与问题的范围。<br> 提出问题来明确用例与约束条件。<br> 讨论假设。</p></blockquote><p>我们将在没有面试官明确说明问题的情况下，自己定义一些用例以及限制条件。</p><h3 id="用例" tabindex="-1"><a class="header-anchor" href="#用例" aria-hidden="true">#</a> 用例</h3><h4 id="我们将把问题限定在仅处理以下用例的范围中" tabindex="-1"><a class="header-anchor" href="#我们将把问题限定在仅处理以下用例的范围中" aria-hidden="true">#</a> 我们将把问题限定在仅处理以下用例的范围中</h4><ul><li><strong>用户</strong>发布了一篇推特 <ul><li><strong>服务</strong>将推特推送给关注者，给他们发送消息通知与邮件</li></ul></li><li><strong>用户</strong>浏览用户时间轴（用户最近的活动）</li><li><strong>用户</strong>浏览主页时间轴（用户关注的人最近的活动）</li><li><strong>用户</strong>搜索关键词</li><li><strong>服务</strong>需要有高可用性</li></ul><h4 id="不在用例范围内的有" tabindex="-1"><a class="header-anchor" href="#不在用例范围内的有" aria-hidden="true">#</a> 不在用例范围内的有</h4><ul><li><strong>服务</strong>向 Firehose 与其它流数据接口推送推特</li><li><strong>服务</strong>根据用户的”是否可见“选项排除推特 <ul><li>隐藏未关注者的 @回复</li><li>关心”隐藏转发“设置</li></ul></li><li>数据分析</li></ul><h3 id="限制条件与假设" tabindex="-1"><a class="header-anchor" href="#限制条件与假设" aria-hidden="true">#</a> 限制条件与假设</h3><h4 id="提出假设" tabindex="-1"><a class="header-anchor" href="#提出假设" aria-hidden="true">#</a> 提出假设</h4><p>普遍情况</p><ul><li>网络流量不是均匀分布的</li><li>发布推特的速度需要足够快速 <ul><li>除非有上百万的关注者，否则将推特推送给粉丝的速度要足够快</li></ul></li><li>1 亿个活跃用户</li><li>每天新发布 5 亿条推特，每月新发布 150 亿条推特 <ul><li>平均每条推特需要推送给 5 个人</li><li>每天需要进行 50 亿次推送</li><li>每月需要进行 1500 亿次推送</li></ul></li><li>每月需要处理 2500 亿次读取请求</li><li>每月需要处理 100 亿次搜索</li></ul><p>时间轴功能</p><ul><li>浏览时间轴需要足够快</li><li>推特的读取负载要大于写入负载 <ul><li>需要为推特的快速读取进行优化</li></ul></li><li>存入推特是高写入负载功能</li></ul><p>搜索功能</p><ul><li>搜索速度需要足够快</li><li>搜索是高负载读取功能</li></ul><h4 id="计算用量" tabindex="-1"><a class="header-anchor" href="#计算用量" aria-hidden="true">#</a> 计算用量</h4><p><strong>如果你需要进行粗略的用量计算，请向你的面试官说明。</strong></p><ul><li>每条推特的大小： <ul><li><code>tweet_id</code> - 8 字节</li><li><code>user_id</code> - 32 字节</li><li><code>text</code> - 140 字节</li><li><code>media</code> - 平均 10 KB</li><li>总计： 大约 10 KB</li></ul></li><li>每月产生新推特的内容为 150 TB <ul><li>每条推特 10 KB _ 每天 5 亿条推特 _ 每月 30 天</li><li>3 年产生新推特的内容为 5.4 PB</li></ul></li><li>每秒需要处理 10 万次读取请求 <ul><li>每个月需要处理 2500 亿次请求 * (每秒 400 次请求 / 每月 10 亿次请求)</li></ul></li><li>每秒发布 6000 条推特 <ul><li>每月发布 150 亿条推特 * (每秒 400 次请求 / 每月 10 次请求)</li></ul></li><li>每秒推送 6 万条推特 <ul><li>每月推送 1500 亿条推特 * (每秒 400 次请求 / 每月 10 亿次请求)</li></ul></li><li>每秒 4000 次搜索请求</li></ul><p>便利换算指南：</p><ul><li>每个月有 250 万秒</li><li>每秒一个请求 = 每个月 250 万次请求</li><li>每秒 40 个请求 = 每个月 1 亿次请求</li><li>每秒 400 个请求 = 每个月 10 亿次请求</li></ul><h2 id="第二步-概要设计" tabindex="-1"><a class="header-anchor" href="#第二步-概要设计" aria-hidden="true">#</a> 第二步：概要设计</h2><blockquote><p>列出所有重要组件以规划概要设计。</p></blockquote><figure><img src="http://i.imgur.com/48tEA2j.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><h2 id="第三步-设计核心组件" tabindex="-1"><a class="header-anchor" href="#第三步-设计核心组件" aria-hidden="true">#</a> 第三步：设计核心组件</h2><blockquote><p>深入每个核心组件的细节。</p></blockquote><h3 id="用例-用户发表了一篇推特" tabindex="-1"><a class="header-anchor" href="#用例-用户发表了一篇推特" aria-hidden="true">#</a> 用例：用户发表了一篇推特</h3>',28),q={href:"https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-%E8%BF%98%E6%98%AF-nosql",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"NoSQL 数据库",-1),x=e("strong",null,"内存数据库",-1),R=e("sup",null,[e("a",{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#每个程序员都应该知道的延迟数"},"1")],-1),M=e("p",null,[n("我们可以将照片、视频之类的媒体存储于"),e("strong",null,"对象存储"),n("中。")],-1),z=e("strong",null,"客户端",-1),H={href:"https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server",target:"_blank",rel:"noopener noreferrer"},F=e("strong",null,"Web 服务器",-1),C=s("<li><strong>Web 服务器</strong>将请求转发给<strong>写 API</strong>服务器</li><li><strong>写 API</strong>服务器将推特使用 <strong>SQL 数据库</strong>存储于用户时间轴中</li><li><strong>写 API</strong>调用<strong>消息输出服务</strong>，进行以下操作： <ul><li>查询<strong>用户 图 服务</strong>找到存储于<strong>内存缓存</strong>中的此用户的粉丝</li><li>将推特存储于<strong>内存缓存</strong>中的<strong>此用户的粉丝的主页时间轴</strong>中 <ul><li>O(n) 复杂度操作： 1000 名粉丝 = 1000 次查找与插入</li></ul></li><li>将特推存储在<strong>搜索索引服务</strong>中，以加快搜索</li><li>将媒体存储于<strong>对象存储</strong>中</li><li>使用<strong>通知服务</strong>向粉丝发送推送： <ul><li>使用<strong>队列</strong>异步推送通知</li></ul></li></ul></li>",3),S=s(`<p><strong>向你的面试官告知你准备写多少代码</strong>。</p><p>如果我们用 Redis 作为<strong>内存缓存</strong>，那可以用 Redis 原生的 list 作为其数据结构。结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>           tweet n+2                   tweet n+1                   tweet n
| 8 bytes   8 bytes  1 byte | 8 bytes   8 bytes  1 byte | 8 bytes   8 bytes  1 byte |
| tweet_id  user_id  meta   | tweet_id  user_id  meta   | tweet_id  user_id  meta   |
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新发布的推特将被存储在对应用户（关注且活跃的用户）的主页时间轴的<strong>内存缓存</strong>中。</p>`,4),w={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%A1%A8%E8%BF%B0%E6%80%A7%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBrest",target:"_blank",rel:"noopener noreferrer"},L=s(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ curl -X POST --data &#39;{ &quot;user_id&quot;: &quot;123&quot;, &quot;auth_token&quot;: &quot;ABC123&quot;, \\
    &quot;status&quot;: &quot;hello world!&quot;, &quot;media_ids&quot;: &quot;ABC987&quot; }&#39; \\
    https://twitter.com/api/v1/tweet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    &quot;created_at&quot;: &quot;Wed Sep 05 00:37:15 +0000 2012&quot;,
    &quot;status&quot;: &quot;hello world!&quot;,
    &quot;tweet_id&quot;: &quot;987&quot;,
    &quot;user_id&quot;: &quot;123&quot;,
    ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),I={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8%E5%8D%8F%E8%AE%AErpc",target:"_blank",rel:"noopener noreferrer"},P=e("h3",{id:"用例-用户浏览主页时间轴",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#用例-用户浏览主页时间轴","aria-hidden":"true"},"#"),n(" 用例：用户浏览主页时间轴")],-1),Q=e("li",null,[e("strong",null,"客户端"),n("向 "),e("strong",null,"Web 服务器"),n("发起一次读取主页时间轴的请求")],-1),N=e("li",null,[e("strong",null,"Web 服务器"),n("将请求转发给"),e("strong",null,"读取 API"),n("服务器")],-1),W=e("strong",null,"读取 API",-1),T=e("strong",null,"时间轴服务",-1),O=e("li",null,[n("从"),e("strong",null,"内存缓存"),n("读取时间轴数据，其中包括推特 id 与用户 id - O(1)")],-1),V={href:"http://redis.io/commands/mget",target:"_blank",rel:"noopener noreferrer"},j=e("strong",null,"推特信息服务",-1),K=e("li",null,[n("通过 muiltiget 向"),e("strong",null,"用户信息服务"),n("进行查询，以获取相关 id 用户的额外信息 - O(n)")],-1),X=s(`<p>REST API：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ curl https://twitter.com/api/v1/home_timeline?user_id=123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    &quot;user_id&quot;: &quot;456&quot;,
    &quot;tweet_id&quot;: &quot;123&quot;,
    &quot;status&quot;: &quot;foo&quot;
},
{
    &quot;user_id&quot;: &quot;789&quot;,
    &quot;tweet_id&quot;: &quot;456&quot;,
    &quot;status&quot;: &quot;bar&quot;
},
{
    &quot;user_id&quot;: &quot;789&quot;,
    &quot;tweet_id&quot;: &quot;579&quot;,
    &quot;status&quot;: &quot;baz&quot;
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用例-用户浏览用户时间轴" tabindex="-1"><a class="header-anchor" href="#用例-用户浏览用户时间轴" aria-hidden="true">#</a> 用例：用户浏览用户时间轴</h3><ul><li><strong>客户端</strong>向<strong>Web 服务器</strong>发起获得用户时间线的请求</li><li><strong>Web 服务器</strong>将请求转发给<strong>读取 API</strong>服务器</li><li><strong>读取 API</strong>从 <strong>SQL 数据库</strong>中取出用户的时间轴</li></ul><p>REST API 与前面的主页时间轴类似，区别只在于取出的推特是由用户自己发送而不是关注人发送。</p><h3 id="用例-用户搜索关键词" tabindex="-1"><a class="header-anchor" href="#用例-用户搜索关键词" aria-hidden="true">#</a> 用例：用户搜索关键词</h3>`,8),$=e("li",null,[e("strong",null,"客户端"),n("将搜索请求发给"),e("strong",null,"Web 服务器")],-1),G=e("li",null,[e("strong",null,"Web 服务器"),n("将请求转发给"),e("strong",null,"搜索 API"),n("服务器")],-1),J=e("strong",null,"搜索 API",-1),U=e("strong",null,"搜索服务",-1),Y=e("li",null,[n("对输入进行转换与分词，弄明白需要搜索什么东西 "),e("ul",null,[e("li",null,"移除标点等额外内容"),e("li",null,"将文本打散为词组"),e("li",null,"修正拼写错误"),e("li",null,"规范字母大小写"),e("li",null,"将查询转换为布尔操作")])],-1),Z=e("strong",null,"搜索集群",-1),ee={href:"https://lucene.apache.org/",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/donnemartin/system-design-primer#under-development",target:"_blank",rel:"noopener noreferrer"},te=e("li",null,"合并取到的条目，进行评分与排序，最终返回结果",-1),re=s(`<p>REST API：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ curl https://twitter.com/api/v1/search?query=hello+world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回结果与前面的主页时间轴类似，只不过返回的是符合查询条件的推特。</p><h2 id="第四步-架构扩展" tabindex="-1"><a class="header-anchor" href="#第四步-架构扩展" aria-hidden="true">#</a> 第四步：架构扩展</h2><blockquote><p>根据限制条件，找到并解决瓶颈。</p></blockquote><figure><img src="http://i.imgur.com/MzExP06.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><p><strong>重要提示：不要从最初设计直接跳到最终设计中！</strong></p>`,7),se=e("strong",null,"基准测试、负载测试",-1),le=e("strong",null,"分析、描述",-1),oe=e("p",null,[n("讨论初始设计可能遇到的瓶颈及相关解决方案是很重要的。例如加上一个配置多台 "),e("strong",null,"Web 服务器"),n("的"),e("strong",null,"负载均衡器"),n("是否能够解决问题？"),e("strong",null,"CDN"),n("呢？"),e("strong",null,"主从复制"),n("呢？它们各自的替代方案和需要"),e("strong",null,"权衡"),n("的利弊又有什么呢？")],-1),ie=e("p",null,"我们将会介绍一些组件来完成设计，并解决架构扩张问题。内置的负载均衡器将不做讨论以节省篇幅。",-1),ae=e("strong",null,"为了避免重复讨论",-1),de={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%BB%E9%A2%98%E7%9A%84%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},me={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%B0%B4%E5%B9%B3%E6%89%A9%E5%B1%95",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86web-%E6%9C%8D%E5%8A%A1%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%BA%94%E7%94%A8%E5%B1%82",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},be={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9Frdbms",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%95%85%E9%9A%9C%E5%88%87%E6%8D%A2",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E4%B8%80%E8%87%B4%E6%80%A7%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%8F%AF%E7%94%A8%E6%80%A7%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},Be=s("<p><strong>消息输出服务</strong>有可能成为性能瓶颈。那些有着百万数量关注着的用户可能发一条推特就需要好几分钟才能完成消息输出进程。这有可能使 @回复 这种推特时出现竞争条件，因此需要根据服务时间对此推特进行重排序来降低影响。</p><p>我们还可以避免从高关注量的用户输出推特。相反，我们可以通过搜索来找到高关注量用户的推特，并将搜索结果与用户的主页时间轴合并，再根据时间对其进行排序。</p><p>此外，还可以通过以下内容进行优化：</p><ul><li>仅为每个主页时间轴在<strong>内存缓存</strong>中存储数百条推特</li><li>仅在<strong>内存缓存</strong>中存储活动用户的主页时间轴 <ul><li>如果某个用户在过去 30 天都没有产生活动，那我们可以使用 <strong>SQL 数据库</strong>重新构建他的时间轴 <ul><li>使用<strong>用户 图 服务</strong>来查询并确定用户关注的人</li><li>从 <strong>SQL 数据库</strong>中取出推特，并将它们存入<strong>内存缓存</strong></li></ul></li></ul></li><li>仅在<strong>推特信息服务</strong>中存储一个月的推特</li><li>仅在<strong>用户信息服务</strong>中存储活动用户的信息</li><li><strong>搜索集群</strong>需要将推特保留在内存中，以降低延迟</li></ul><p>我们还可以考虑优化 <strong>SQL 数据库</strong> 来解决一些瓶颈问题。</p><p><strong>内存缓存</strong>能减小一些数据库的负载，靠 <strong>SQL Read 副本</strong>已经足够处理缓存未命中情况。我们还可以考虑使用一些额外的 SQL 性能拓展技术。</p><p>高容量的写入将淹没单个的 <strong>SQL 写主从</strong>模式，因此需要更多的拓展技术。</p>",7),ve={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%81%94%E5%90%88",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%88%86%E7%89%87",target:"_blank",rel:"noopener noreferrer"},De={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E9%9D%9E%E8%A7%84%E8%8C%83%E5%8C%96",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-%E8%B0%83%E4%BC%98",target:"_blank",rel:"noopener noreferrer"},ye=e("p",null,[n("我们也可以考虑将一些数据移至 "),e("strong",null,"NoSQL 数据库"),n("。")],-1),xe=e("h2",{id:"其它要点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其它要点","aria-hidden":"true"},"#"),n(" 其它要点")],-1),Re=e("blockquote",null,[e("p",null,"是否深入这些额外的主题，取决于你的问题范围和剩下的时间。")],-1),Me=e("h4",{id:"nosql",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nosql","aria-hidden":"true"},"#"),n(" NoSQL")],-1),ze={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E9%94%AE-%E5%80%BC%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%88%97%E5%9E%8B%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-%E8%BF%98%E6%98%AF-nosql",target:"_blank",rel:"noopener noreferrer"},we=e("h3",{id:"缓存",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#缓存","aria-hidden":"true"},"#"),n(" 缓存")],-1),Le={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#cdn-%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#web-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%BA%94%E7%94%A8%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},We={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E7%BA%A7%E5%88%AB%E7%9A%84%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%AF%B9%E8%B1%A1%E7%BA%A7%E5%88%AB%E7%9A%84%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%BC%93%E5%AD%98%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%9B%B4%E5%86%99%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},je={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%9B%9E%E5%86%99%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%88%B7%E6%96%B0",target:"_blank",rel:"noopener noreferrer"},Xe=e("h3",{id:"异步与微服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#异步与微服务","aria-hidden":"true"},"#"),n(" 异步与微服务")],-1),$e={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%83%8C%E5%8E%8B",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%BE%AE%E6%9C%8D%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"},Ye=e("h3",{id:"通信",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#通信","aria-hidden":"true"},"#"),n(" 通信")],-1),Ze={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%A1%A8%E8%BF%B0%E6%80%A7%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBrest",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8%E5%8D%8F%E8%AE%AErpc",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},tn=e("h3",{id:"安全性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安全性","aria-hidden":"true"},"#"),n(" 安全性")],-1),rn={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%AE%89%E5%85%A8",target:"_blank",rel:"noopener noreferrer"},sn=e("h3",{id:"延迟数值",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#延迟数值","aria-hidden":"true"},"#"),n(" 延迟数值")],-1),ln={href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%AF%8F%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E9%83%BD%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84%E5%BB%B6%E8%BF%9F%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},on=e("h3",{id:"持续探讨",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#持续探讨","aria-hidden":"true"},"#"),n(" 持续探讨")],-1),an=e("ul",null,[e("li",null,"持续进行基准测试并监控你的系统，以解决他们提出的瓶颈问题。"),e("li",null,"架构拓展是一个迭代的过程。")],-1);function dn(hn,un){const r=l("ExternalLinkIcon"),o=l("RouterLink");return a(),d("div",null,[e("blockquote",null,[e("ul",null,[e("li",null,[n("原文地址："),e("a",m,[n("github.com/donnemartin/system-design-primer"),t(r)])]),e("li",null,[n("译文出自："),e("a",g,[n("掘金翻译计划"),t(r)])]),e("li",null,[n("译者："),e("a",E,[n("XatMassacrE"),t(r)]),n("、"),e("a",c,[n("L9m"),t(r)]),n("、"),e("a",b,[n("Airmacho"),t(r)]),n("、"),e("a",_,[n("xiaoyusilen"),t(r)]),n("、"),e("a",p,[n("jifaxu"),t(r)]),n("、"),e("a",A,[n("根号三"),t(r)])])])]),f,e("p",null,[e("strong",null,[n("注意：这个文档中的链接会直接指向"),e("a",B,[n("系统设计主题索引"),t(r)]),n("中的有关部分，以避免重复的内容。你可以参考链接的相关内容，来了解其总的要点、方案的权衡取舍以及可选的替代方案。")])]),v,e("p",null,[n("我们可以将用户自己发表的推特存储在"),e("a",q,[n("关系数据库"),t(r)]),n("中。我们也可以讨论一下"),e("a",D,[n("究竟是用 SQL 还是用 NoSQL"),t(r)]),n("。")]),e("p",null,[n("构建用户主页时间轴（查看关注用户的活动）以及推送推特是件麻烦事。将特推传播给所有关注者（每秒约递送 6 万条推特）这一操作有可能会使传统的"),e("a",k,[n("关系数据库"),t(r)]),n("超负载。因此，我们可以使用 "),y,n("或"),x,n("之类的更快的数据存储方式。从内存读取 1 MB 连续数据大约要花 250 微秒，而从 SSD 读取同样大小的数据要花费 4 倍的时间，从机械硬盘读取需要花费 80 倍以上的时间。"),R]),M,e("ul",null,[e("li",null,[z,n("向应用"),e("a",H,[n("反向代理"),t(r)]),n("的"),F,n("发送一条推特")]),C]),S,e("p",null,[n("我们可以调用一个公共的 "),e("a",w,[n("REST API"),t(r)]),n("：")]),L,e("p",null,[n("而对于服务器内部的通信，我们可以使用 "),e("a",I,[n("RPC"),t(r)]),n("。")]),P,e("ul",null,[Q,N,e("li",null,[W,n("服务器调用"),T,n("进行以下操作： "),e("ul",null,[O,e("li",null,[n("通过 "),e("a",V,[n("multiget"),t(r)]),n(" 向"),j,n("进行查询，以获取相关 id 推特的额外信息 - O(n)")]),K])])]),X,e("ul",null,[$,G,e("li",null,[J,n("调用"),U,n("进行以下操作： "),e("ul",null,[Y,e("li",null,[n("查询"),Z,n("（例如"),e("a",ee,[n("Lucene"),t(r)]),n("）检索结果： "),e("ul",null,[e("li",null,[n("对集群内的所有服务器进行查询，将有结果的查询进行"),e("a",ne,[n("发散聚合（Scatter gathers）"),t(r)])]),te])])])])]),re,e("p",null,[n("现在你要 1) "),se,n("。2) "),le,n("性能瓶颈。3) 在解决瓶颈问题的同时，评估替代方案、权衡利弊。4) 重复以上步骤。请阅读"),t(o,{to:"/code/system-design/system-design-primer/scaling_aws.html"},{default:h(()=>[n("「设计一个系统，并将其扩大到为数以百万计的 AWS 用户服务」")]),_:1}),n(" 来了解如何逐步扩大初始设计。")]),oe,ie,e("p",null,[ae,n("，请参考"),e("a",de,[n("系统设计主题索引"),t(r)]),n("相关部分来了解其要点、方案的权衡取舍以及可选的替代方案。")]),e("ul",null,[e("li",null,[e("a",he,[n("DNS"),t(r)])]),e("li",null,[e("a",ue,[n("负载均衡器"),t(r)])]),e("li",null,[e("a",me,[n("水平拓展"),t(r)])]),e("li",null,[e("a",ge,[n("反向代理（web 服务器）"),t(r)])]),e("li",null,[e("a",Ee,[n("API 服务（应用层）"),t(r)])]),e("li",null,[e("a",ce,[n("缓存"),t(r)])]),e("li",null,[e("a",be,[n("关系型数据库管理系统 (RDBMS)"),t(r)])]),e("li",null,[e("a",_e,[n("SQL 故障主从切换"),t(r)])]),e("li",null,[e("a",pe,[n("主从复制"),t(r)])]),e("li",null,[e("a",Ae,[n("一致性模式"),t(r)])]),e("li",null,[e("a",fe,[n("可用性模式"),t(r)])])]),Be,e("ul",null,[e("li",null,[e("a",ve,[n("联合"),t(r)])]),e("li",null,[e("a",qe,[n("分片"),t(r)])]),e("li",null,[e("a",De,[n("非规范化"),t(r)])]),e("li",null,[e("a",ke,[n("SQL 调优"),t(r)])])]),ye,xe,Re,Me,e("ul",null,[e("li",null,[e("a",ze,[n("键-值存储"),t(r)])]),e("li",null,[e("a",He,[n("文档类型存储"),t(r)])]),e("li",null,[e("a",Fe,[n("列型存储"),t(r)])]),e("li",null,[e("a",Ce,[n("图数据库"),t(r)])]),e("li",null,[e("a",Se,[n("SQL vs NoSQL"),t(r)])])]),we,e("ul",null,[e("li",null,[n("在哪缓存 "),e("ul",null,[e("li",null,[e("a",Le,[n("客户端缓存"),t(r)])]),e("li",null,[e("a",Ie,[n("CDN 缓存"),t(r)])]),e("li",null,[e("a",Pe,[n("Web 服务器缓存"),t(r)])]),e("li",null,[e("a",Qe,[n("数据库缓存"),t(r)])]),e("li",null,[e("a",Ne,[n("应用缓存"),t(r)])])])]),e("li",null,[n("什么需要缓存 "),e("ul",null,[e("li",null,[e("a",We,[n("数据库查询级别的缓存"),t(r)])]),e("li",null,[e("a",Te,[n("对象级别的缓存"),t(r)])])])]),e("li",null,[n("何时更新缓存 "),e("ul",null,[e("li",null,[e("a",Oe,[n("缓存模式"),t(r)])]),e("li",null,[e("a",Ve,[n("直写模式"),t(r)])]),e("li",null,[e("a",je,[n("回写模式"),t(r)])]),e("li",null,[e("a",Ke,[n("刷新"),t(r)])])])])]),Xe,e("ul",null,[e("li",null,[e("a",$e,[n("消息队列"),t(r)])]),e("li",null,[e("a",Ge,[n("任务队列"),t(r)])]),e("li",null,[e("a",Je,[n("背压"),t(r)])]),e("li",null,[e("a",Ue,[n("微服务"),t(r)])])]),Ye,e("ul",null,[e("li",null,[n("可权衡选择的方案： "),e("ul",null,[e("li",null,[n("与客户端的外部通信 - "),e("a",Ze,[n("使用 REST 作为 HTTP API"),t(r)])]),e("li",null,[n("服务器内部通信 - "),e("a",en,[n("RPC"),t(r)])])])]),e("li",null,[e("a",nn,[n("服务发现"),t(r)])])]),tn,e("p",null,[n("请参阅"),e("a",rn,[n("「安全」"),t(r)]),n("一章。")]),sn,e("p",null,[n("请参阅"),e("a",ln,[n("「每个程序员都应该知道的延迟数」"),t(r)]),n("。")]),on,an])}const En=i(u,[["render",dn],["__file","twitter.html.vue"]]);export{En as default};
