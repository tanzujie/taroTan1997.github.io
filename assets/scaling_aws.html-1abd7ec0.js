import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as a,a as e,b as r,e as t,d as l}from"./app-8cc94dc5.js";const h={},d={href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/xitu/gold-miner",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/XatMassacrE",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/L9m",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/Airmacho",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/xiaoyusilen",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/jifaxu",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/sqrthree",target:"_blank",rel:"noopener noreferrer"},f=e("h1",{id:"在-aws-上设计支持百万级到千万级用户的系统",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#在-aws-上设计支持百万级到千万级用户的系统","aria-hidden":"true"},"#"),r(" 在 AWS 上设计支持百万级到千万级用户的系统")],-1),y={href:"https://github.com/donnemartin/system-design-primer#index-of-system-design-topics",target:"_blank",rel:"noopener noreferrer"},k=l('<h2 id="第-1-步-用例和约束概要" tabindex="-1"><a class="header-anchor" href="#第-1-步-用例和约束概要" aria-hidden="true">#</a> 第 1 步：用例和约束概要</h2><blockquote><p>收集需求并调查问题。<br> 通过提问清晰用例和约束。<br> 讨论假设。</p></blockquote><p>如果没有面试官提出明确的问题，我们将自己定义一些用例和约束条件。</p><h3 id="用例" tabindex="-1"><a class="header-anchor" href="#用例" aria-hidden="true">#</a> 用例</h3><p>解决这个问题是一个循序渐进的过程：1) <strong>基准/负载 测试</strong>， 2) 瓶颈 <strong>概述</strong>， 3) 当评估可选和折中方案时定位瓶颈，4) 重复，这是向可扩展的设计发展基础设计的好模式。</p><p>除非你有 AWS 的背景或者正在申请需要 AWS 知识的相关职位，否则不要求了解 AWS 的相关细节。并且，这个练习中讨论的许多原则可以更广泛地应用于 AWS 生态系统之外。</p><h4 id="我们就处理以下用例讨论这一问题" tabindex="-1"><a class="header-anchor" href="#我们就处理以下用例讨论这一问题" aria-hidden="true">#</a> 我们就处理以下用例讨论这一问题</h4><ul><li><strong>用户</strong> 进行读或写请求 <ul><li><strong>服务</strong> 进行处理，存储用户数据，然后返回结果</li></ul></li><li><strong>服务</strong> 需要从支持小规模用户开始到百万用户 <ul><li>在我们演化架构来处理大量的用户和请求时，讨论一般的扩展模式</li></ul></li><li><strong>服务</strong> 高可用</li></ul><h3 id="约束和假设" tabindex="-1"><a class="header-anchor" href="#约束和假设" aria-hidden="true">#</a> 约束和假设</h3><h4 id="状态假设" tabindex="-1"><a class="header-anchor" href="#状态假设" aria-hidden="true">#</a> 状态假设</h4><ul><li>流量不均匀分布</li><li>需要关系数据</li><li>从一个用户扩展到千万用户 <ul><li>表示用户量的增长 <ul><li>用户量+</li><li>用户量++</li><li>用户量+++</li><li>...</li></ul></li><li>1000 万用户</li><li>每月 10 亿次写入</li><li>每月 1000 亿次读出</li><li>100:1 读写比率</li><li>每次写入 1 KB 内容</li></ul></li></ul><h4 id="计算使用" tabindex="-1"><a class="header-anchor" href="#计算使用" aria-hidden="true">#</a> 计算使用</h4><p><strong>向你的面试官厘清你是否应该做粗略的使用计算</strong></p><ul><li>1 TB 新内容 / 月 <ul><li>1 KB 每次写入 * 10 亿 写入 / 月</li><li>36 TB 新内容 / 3 年</li><li>假设大多数写入都是新内容而不是更新已有内容</li></ul></li><li>平均每秒 400 次写入</li><li>平均每秒 40,000 次读取</li></ul><p>便捷的转换指南：</p><ul><li>250 万秒 / 月</li><li>1 次请求 / 秒 = 250 万次请求 / 月</li><li>40 次请求 / 秒 = 1 亿次请求 / 月</li><li>400 次请求 / 秒 = 10 亿请求 / 月</li></ul><h2 id="第-2-步-创建高级设计方案" tabindex="-1"><a class="header-anchor" href="#第-2-步-创建高级设计方案" aria-hidden="true">#</a> 第 2 步：创建高级设计方案</h2><blockquote><p>用所有重要组件概述高水平设计</p></blockquote><figure><img src="http://i.imgur.com/B8LDKD7.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><h2 id="第-3-步-设计核心组件" tabindex="-1"><a class="header-anchor" href="#第-3-步-设计核心组件" aria-hidden="true">#</a> 第 3 步：设计核心组件</h2><blockquote><p>深入每个核心组件的细节。</p></blockquote><h3 id="用例-用户进行读写请求" tabindex="-1"><a class="header-anchor" href="#用例-用户进行读写请求" aria-hidden="true">#</a> 用例：用户进行读写请求</h3><h4 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h4><ul><li>只有 1-2 个用户时，你只需要基础配置 <ul><li>为简单起见，只需要一台服务器</li><li>必要时进行纵向扩展</li><li>监控以确定瓶颈</li></ul></li></ul><h4 id="以单台服务器开始" tabindex="-1"><a class="header-anchor" href="#以单台服务器开始" aria-hidden="true">#</a> 以单台服务器开始</h4>',25),x=e("strong",null,"Web 服务器",-1),S=e("li",null,"存储用户数据",-1),L={href:"https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms",target:"_blank",rel:"noopener noreferrer"},Q=e("strong",null,"MySQL 数据库",-1),q=l("<p>运用 <strong>纵向扩展</strong>：</p><ul><li>选择一台更大容量的服务器</li><li>密切关注指标，确定如何扩大规模 <ul><li>使用基本监控来确定瓶颈:CPU、内存、IO、网络等</li><li>CloudWatch, top, nagios, statsd, graphite 等</li></ul></li><li>纵向扩展的代价将变得更昂贵</li><li>无冗余/容错</li></ul><p><strong>折中方案, 可选方案, 和其他细节:</strong></p>",3),W=e("strong",null,"纵向扩展",-1),v={href:"https://github.com/donnemartin/system-design-primer#horizontal-scaling",target:"_blank",rel:"noopener noreferrer"},I=e("strong",null,"横向扩展",-1),M=e("h4",{id:"自-sql-开始-但认真考虑-nosql",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#自-sql-开始-但认真考虑-nosql","aria-hidden":"true"},"#"),r(" 自 SQL 开始，但认真考虑 NoSQL")],-1),P=e("p",null,[r("约束条件假设需要关系型数据。我们可以开始时在单台服务器上使用 "),e("strong",null,"MySQL 数据库"),r("。")],-1),w=e("p",null,[e("strong",null,"折中方案, 可选方案, 和其他细节:")],-1),C={href:"https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/donnemartin/system-design-primer#sql-or-nosql",target:"_blank",rel:"noopener noreferrer"},B=e("h4",{id:"分配公共静态-ip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#分配公共静态-ip","aria-hidden":"true"},"#"),r(" 分配公共静态 IP")],-1),D=e("ul",null,[e("li",null,"弹性 IP 提供了一个公共端点，不会在重启时改变 IP。"),e("li",null,"故障转移时只需要把域名指向新 IP。")],-1),N=e("h4",{id:"使用-dns-服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用-dns-服务","aria-hidden":"true"},"#"),r(" 使用 DNS 服务")],-1),z=e("strong",null,"DNS",-1),T={href:"https://aws.amazon.com/cn/route53/",target:"_blank",rel:"noopener noreferrer"},E=e("p",null,[e("strong",null,"折中方案, 可选方案, 和其他细节:")],-1),R={href:"https://github.com/donnemartin/system-design-primer#domain-name-system",target:"_blank",rel:"noopener noreferrer"},j=l('<h4 id="安全的-web-服务器" tabindex="-1"><a class="header-anchor" href="#安全的-web-服务器" aria-hidden="true">#</a> 安全的 Web 服务器</h4><ul><li>只开放必要的端口 <ul><li>允许 Web 服务器响应来自以下端口的请求 <ul><li>HTTP 80</li><li>HTTPS 443</li><li>SSH IP 白名单 22</li></ul></li><li>防止 Web 服务器启动外链</li></ul></li></ul><p><strong>折中方案, 可选方案, 和其他细节:</strong></p>',3),H={href:"https://github.com/donnemartin/system-design-primer#security",target:"_blank",rel:"noopener noreferrer"},X=l('<h2 id="第-4-步-扩展设计" tabindex="-1"><a class="header-anchor" href="#第-4-步-扩展设计" aria-hidden="true">#</a> 第 4 步：扩展设计</h2><blockquote><p>在给定约束条件下，定义和确认瓶颈。</p></blockquote><h3 id="用户" tabindex="-1"><a class="header-anchor" href="#用户" aria-hidden="true">#</a> 用户+</h3><figure><img src="http://i.imgur.com/rrfjMXB.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><h4 id="假设" tabindex="-1"><a class="header-anchor" href="#假设" aria-hidden="true">#</a> 假设</h4><p>我们的用户数量开始上升，并且单台服务器的负载上升。<strong>基准/负载测试</strong> 和 <strong>分析</strong> 指出 <strong>MySQL 数据库</strong> 占用越来越多的内存和 CPU 资源，同时用户数据将填满硬盘空间。</p><p>目前，我们尚能在纵向扩展时解决这些问题。不幸的是，解决这些问题的代价变得相当昂贵，并且原来的系统并不能允许在 <strong>MySQL 数据库</strong> 和 <strong>Web 服务器</strong> 的基础上进行独立扩展。</p><h4 id="目标-1" tabindex="-1"><a class="header-anchor" href="#目标-1" aria-hidden="true">#</a> 目标</h4><ul><li>减轻单台服务器负载并且允许独立扩展 <ul><li>在 <strong>对象存储</strong> 中单独存储静态内容</li><li>将 <strong>MySQL 数据库</strong> 迁移到单独的服务器上</li></ul></li><li>缺点 <ul><li>这些变化会增加复杂性，并要求对 <strong>Web 服务器</strong> 进行更改，以指向 <strong>对象存储</strong> 和 <strong>MySQL 数据库</strong></li><li>必须采取额外的安全措施来确保新组件的安全</li><li>AWS 的成本也会增加，但应该与自身管理类似系统的成本做比较</li></ul></li></ul><h4 id="独立保存静态内容" tabindex="-1"><a class="header-anchor" href="#独立保存静态内容" aria-hidden="true">#</a> 独立保存静态内容</h4><ul><li>考虑使用像 S3 这样可管理的 <strong>对象存储</strong> 服务来存储静态内容 <ul><li>高扩展性和可靠性</li><li>服务器端加密</li></ul></li><li>迁移静态内容到 S3 <ul><li>用户文件</li><li>JS</li><li>CSS</li><li>图片</li><li>视频</li></ul></li></ul><h4 id="迁移-mysql-数据库到独立机器上" tabindex="-1"><a class="header-anchor" href="#迁移-mysql-数据库到独立机器上" aria-hidden="true">#</a> 迁移 MySQL 数据库到独立机器上</h4><ul><li>考虑使用类似 RDS 的服务来管理 <strong>MySQL 数据库</strong><ul><li>简单的管理，扩展</li><li>多个可用区域</li><li>空闲时加密</li></ul></li></ul><h4 id="系统安全" tabindex="-1"><a class="header-anchor" href="#系统安全" aria-hidden="true">#</a> 系统安全</h4><ul><li>在传输和空闲时对数据进行加密</li><li>使用虚拟私有云 <ul><li>为单个 <strong>Web 服务器</strong> 创建一个公共子网，这样就可以发送和接收来自 internet 的流量</li><li>为其他内容创建一个私有子网，禁止外部访问</li><li>在每个组件上只为白名单 IP 打开端口</li></ul></li><li>这些相同的模式应当在新的组件的实现中实践</li></ul><p><strong>折中方案, 可选方案, 和其他细节:</strong></p>',16),O={href:"https://github.com/donnemartin/system-design-primer#security",target:"_blank",rel:"noopener noreferrer"},V=l('<h3 id="用户-1" tabindex="-1"><a class="header-anchor" href="#用户-1" aria-hidden="true">#</a> 用户+++</h3><figure><img src="http://i.imgur.com/raoFTXM.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><h4 id="假设-1" tabindex="-1"><a class="header-anchor" href="#假设-1" aria-hidden="true">#</a> 假设</h4><p>我们的 <strong>基准/负载测试</strong> 和 <strong>性能测试</strong> 显示，在高峰时段，我们的单一 <strong>Web 服务器</strong> 存在瓶颈，导致响应缓慢，在某些情况下还会宕机。随着服务的成熟，我们也希望朝着更高的可用性和冗余发展。</p><h4 id="目标-2" tabindex="-1"><a class="header-anchor" href="#目标-2" aria-hidden="true">#</a> 目标</h4>',5),K=e("li",null,[r("下面的目标试图用 "),e("strong",null,"Web 服务器"),r(" 解决扩展问题 "),e("ul",null,[e("li",null,[r("基于 "),e("strong",null,"基准/负载测试"),r(" 和 "),e("strong",null,"分析"),r("，你可能只需要实现其中的一两个技术")])])],-1),U={href:"https://github.com/donnemartin/system-design-primer#horizontal-scaling",target:"_blank",rel:"noopener noreferrer"},F=e("strong",null,"横向扩展",-1),J={href:"https://github.com/donnemartin/system-design-primer#load-balancer",target:"_blank",rel:"noopener noreferrer"},Z=e("strong",null,"负载均衡器",-1),G=e("li",null,"ELB 是高可用的",-1),Y=e("strong",null,"负载均衡器",-1),$={href:"https://github.com/donnemartin/system-design-primer#active-active",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/donnemartin/system-design-primer#active-passive",target:"_blank",rel:"noopener noreferrer"},re=e("li",null,[r("终止在 "),e("strong",null,"负载平衡器"),r(" 上的 SSL，以减少后端服务器上的计算负载，并简化证书管理")],-1),ne=e("li",null,[r("在多个可用区域中使用多台 "),e("strong",null,"Web 服务器")],-1),te={href:"https://github.com/donnemartin/system-design-primer#master-slave-replication",target:"_blank",rel:"noopener noreferrer"},le=e("strong",null,"主-从 故障转移",-1),ie=e("strong",null,"MySQL",-1),oe=e("strong",null,"Web 服务器",-1),se={href:"https://github.com/donnemartin/system-design-primer#application-layer",target:"_blank",rel:"noopener noreferrer"},ae=e("strong",null,"应用服务器",-1),he=e("li",null,"独立扩展和配置每一层",-1),de=e("strong",null,"Web 服务器",-1),ue={href:"https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server",target:"_blank",rel:"noopener noreferrer"},ge=e("strong",null,"反向代理",-1),ce=e("li",null,[r("例如, 你可以添加 "),e("strong",null,"应用服务器"),r(" 处理 "),e("strong",null,"读 API"),r(" 而另外一些处理 "),e("strong",null,"写 API")],-1),me={href:"https://github.com/donnemartin/system-design-primer#content-delivery-network",target:"_blank",rel:"noopener noreferrer"},_e=e("strong",null,"内容分发网络 (CDN)",-1),pe=l('<p><strong>折中方案, 可选方案, 和其他细节:</strong></p><ul><li>查阅以上链接获得更多细节</li></ul><h3 id="用户-2" tabindex="-1"><a class="header-anchor" href="#用户-2" aria-hidden="true">#</a> 用户+++</h3><figure><img src="http://i.imgur.com/OZCxJr0.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><p><strong>注意：</strong> <strong>内部负载均衡</strong> 不显示以减少混乱</p><h4 id="假设-2" tabindex="-1"><a class="header-anchor" href="#假设-2" aria-hidden="true">#</a> 假设</h4><p>我们的 <strong>性能/负载测试</strong> 和 <strong>性能测试</strong> 显示我们读操作频繁（100:1 的读写比率），并且数据库在高读请求时表现很糟糕。</p><h4 id="目标-3" tabindex="-1"><a class="header-anchor" href="#目标-3" aria-hidden="true">#</a> 目标</h4>',8),be=e("li",null,[r("下面的目标试图解决 "),e("strong",null,"MySQL 数据库"),r(" 的伸缩性问题 "),e("ul",null,[e("li",null,[e("ul",null,[e("li",null,[r("基于 "),e("strong",null,"基准/负载测试"),r(" 和 "),e("strong",null,"分析"),r("，你可能只需要实现其中的一两个技术")])])])])],-1),fe={href:"https://github.com/donnemartin/system-design-primer#cache",target:"_blank",rel:"noopener noreferrer"},ye=e("strong",null,"内存缓存",-1),ke=l('<ul><li><strong>MySQL</strong> 中频繁访问的内容 <ul><li>首先, 尝试配置 <strong>MySQL 数据库</strong> 缓存以查看是否足以在实现 <strong>内存缓存</strong> 之前缓解瓶颈</li></ul></li><li>来自 <strong>Web 服务器</strong> 的会话数据 <ul><li><strong>Web 服务器</strong> 变成无状态的, 允许 <strong>自动伸缩</strong></li></ul></li><li>从内存中读取 1 MB 内存需要大约 250 微秒，而从 SSD 中读取时间要长 4 倍，从磁盘读取的时间要长 80 倍。<sup><a href="https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know">1</a></sup></li></ul>',1),xe={href:"https://github.com/donnemartin/system-design-primer#master-slave-replication",target:"_blank",rel:"noopener noreferrer"},Se=e("strong",null,"MySQL 读取副本",-1),Le=e("li",null,[r("添加更多 "),e("strong",null,"Web 服务器"),r(" and "),e("strong",null,"应用服务器"),r(" 来提高响应")],-1),Qe=l('<p><strong>折中方案, 可选方案, 和其他细节:</strong></p><ul><li>查阅以上链接获得更多细节</li></ul><h4 id="添加-mysql-读取副本" tabindex="-1"><a class="header-anchor" href="#添加-mysql-读取副本" aria-hidden="true">#</a> 添加 MySQL 读取副本</h4><ul><li>除了添加和扩展 <strong>内存缓存</strong>，<strong>MySQL 读副本服务器</strong> 也能够帮助缓解在 <strong>MySQL 写主服务器</strong> 的负载。</li><li>添加逻辑到 <strong>Web 服务器</strong> 来区分读和写操作</li><li>在 <strong>MySQL 读副本服务器</strong> 之上添加 <strong>负载均衡器</strong> （不是为了减少混乱）</li><li>大多数服务都是读取负载大于写入负载</li></ul><p><strong>折中方案, 可选方案, 和其他细节:</strong></p>',5),qe={href:"https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms",target:"_blank",rel:"noopener noreferrer"},We=l('<h3 id="用户-3" tabindex="-1"><a class="header-anchor" href="#用户-3" aria-hidden="true">#</a> 用户++++</h3><figure><img src="http://i.imgur.com/3X8nmdL.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><h4 id="假设-3" tabindex="-1"><a class="header-anchor" href="#假设-3" aria-hidden="true">#</a> 假设</h4><p><strong>基准/负载测试</strong> 和 <strong>分析</strong> 显示，在美国，正常工作时间存在流量峰值，当用户离开办公室时，流量骤降。我们认为，可以通过真实负载自动转换服务器数量来降低成本。我们是一家小商店，所以我们希望 DevOps 尽量自动化地进行 <strong>自动伸缩</strong> 和通用操作。</p><h4 id="目标-4" tabindex="-1"><a class="header-anchor" href="#目标-4" aria-hidden="true">#</a> 目标</h4><ul><li>根据需要添加 <strong>自动扩展</strong><ul><li>跟踪流量高峰</li><li>通过关闭未使用的实例来降低成本</li></ul></li><li>自动化 DevOps <ul><li>Chef, Puppet, Ansible 工具等</li></ul></li><li>继续监控指标以解决瓶颈 <ul><li><strong>主机水平</strong> - 检查一个 EC2 实例</li><li><strong>总水平</strong> - 检查负载均衡器统计数据</li><li><strong>日志分析</strong> - CloudWatch, CloudTrail, Loggly, Splunk, Sumo</li><li><strong>外部站点的性能</strong> - Pingdom or New Relic</li><li><strong>处理通知和事件</strong> - PagerDuty</li><li><strong>错误报告</strong> - Sentry</li></ul></li></ul><h4 id="添加自动扩展" tabindex="-1"><a class="header-anchor" href="#添加自动扩展" aria-hidden="true">#</a> 添加自动扩展</h4><ul><li>考虑使用一个托管服务，比如 AWS <strong>自动扩展</strong><ul><li>为每个 <strong>Web 服务器</strong> 创建一个组，并为每个 <strong>应用服务器</strong> 类型创建一个组，将每个组放置在多个可用区域中</li><li>设置最小和最大实例数</li><li>通过 CloudWatch 来扩展或收缩 <ul><li>可预测负载的简单时间度量</li><li>一段时间内的指标： <ul><li>CPU 负载</li><li>延迟</li><li>网络流量</li><li>自定义指标</li></ul></li></ul></li><li>缺点 <ul><li>自动扩展会引入复杂性</li><li>可能需要一段时间才能适当扩大规模，以满足增加的需求，或者在需求下降时缩减规模</li></ul></li></ul></li></ul><h3 id="用户-4" tabindex="-1"><a class="header-anchor" href="#用户-4" aria-hidden="true">#</a> 用户+++++</h3><figure><img src="http://i.imgur.com/jj3A5N8.png" alt="Imgur" tabindex="0" loading="lazy"><figcaption>Imgur</figcaption></figure><p><strong>注释：</strong> <strong>自动伸缩</strong> 组不显示以减少混乱</p><h4 id="假设-4" tabindex="-1"><a class="header-anchor" href="#假设-4" aria-hidden="true">#</a> 假设</h4><p>当服务继续向着限制条件概述的方向发展，我们反复地运行 <strong>基准/负载测试</strong> 和 <strong>分析</strong> 来进一步发现和定位新的瓶颈。</p><h4 id="目标-5" tabindex="-1"><a class="header-anchor" href="#目标-5" aria-hidden="true">#</a> 目标</h4><p>由于问题的约束，我们将继续提出扩展性的问题：</p><ul><li>如果我们的 <strong>MySQL 数据库</strong> 开始变得过于庞大, 我们可能只考虑把数据在数据库中存储一段有限的时间, 同时在例如 Redshift 这样的数据仓库中存储其余的数据 <ul><li>像 Redshift 这样的数据仓库能够轻松处理每月 1TB 的新内容</li></ul></li><li>平均每秒 40,000 次的读取请求, 可以通过扩展 <strong>内存缓存</strong> 来处理热点内容的读取流量，这对于处理不均匀分布的流量和流量峰值也很有用 <ul><li><strong>SQL 读取副本</strong> 可能会遇到处理缓存未命中的问题, 我们可能需要使用额外的 SQL 扩展模式</li></ul></li><li>对于单个 <strong>SQL 写主-从</strong> 模式来说，平均每秒 400 次写操作（明显更高）可能会很困难，同时还需要更多的扩展技术</li></ul><p>SQL 扩展模型包括：</p>',17),ve={href:"https://github.com/donnemartin/system-design-primer#federation",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://github.com/donnemartin/system-design-primer#sharding",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://github.com/donnemartin/system-design-primer#denormalization",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/donnemartin/system-design-primer#sql-tuning",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/donnemartin/system-design-primer#nosql",target:"_blank",rel:"noopener noreferrer"},Ce=e("strong",null,"NoSQL 数据库",-1),Ae={href:"https://github.com/donnemartin/system-design-primer#application-layer",target:"_blank",rel:"noopener noreferrer"},Be=e("strong",null,"应用服务器",-1),De=l('<ul><li>以照片服务为例，照片上传和缩略图的创建可以分开进行 <ul><li><strong>客户端</strong> 上传图片</li><li><strong>应用服务器</strong> 推送一个任务到 <strong>队列</strong> 例如 SQS</li><li>EC2 上的 <strong>Worker 服务</strong> 或者 Lambda 从 <strong>队列</strong> 拉取 work，然后： <ul><li>创建缩略图</li><li>更新 <strong>数据库</strong></li><li>在 <strong>对象存储</strong> 中存储缩略图</li></ul></li></ul></li></ul><p><strong>折中方案, 可选方案, 和其他细节:</strong></p><ul><li>查阅以上链接获得更多细节</li></ul><h2 id="额外的话题" tabindex="-1"><a class="header-anchor" href="#额外的话题" aria-hidden="true">#</a> 额外的话题</h2><blockquote><p>根据问题的范围和剩余时间，还需要深入讨论其他问题。</p></blockquote><h3 id="sql-扩展模式" tabindex="-1"><a class="header-anchor" href="#sql-扩展模式" aria-hidden="true">#</a> SQL 扩展模式</h3>',6),Ne={href:"https://github.com/donnemartin/system-design-primer#master-slave-replication",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/donnemartin/system-design-primer#federation",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/donnemartin/system-design-primer#sharding",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/donnemartin/system-design-primer#denormalization",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/donnemartin/system-design-primer#sql-tuning",target:"_blank",rel:"noopener noreferrer"},je=e("h4",{id:"nosql",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nosql","aria-hidden":"true"},"#"),r(" NoSQL")],-1),He={href:"https://github.com/donnemartin/system-design-primer#key-value-store",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/donnemartin/system-design-primer#document-store",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://github.com/donnemartin/system-design-primer#wide-column-store",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://github.com/donnemartin/system-design-primer#graph-database",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://github.com/donnemartin/system-design-primer#sql-or-nosql",target:"_blank",rel:"noopener noreferrer"},Ue=e("h3",{id:"缓存",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#缓存","aria-hidden":"true"},"#"),r(" 缓存")],-1),Fe={href:"https://github.com/donnemartin/system-design-primer#client-caching",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://github.com/donnemartin/system-design-primer#cdn-caching",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/donnemartin/system-design-primer#web-server-caching",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://github.com/donnemartin/system-design-primer#database-caching",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/donnemartin/system-design-primer#application-caching",target:"_blank",rel:"noopener noreferrer"},$e={href:"https://github.com/donnemartin/system-design-primer#caching-at-the-database-query-level",target:"_blank",rel:"noopener noreferrer"},er={href:"https://github.com/donnemartin/system-design-primer#caching-at-the-object-level",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://github.com/donnemartin/system-design-primer#cache-aside",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://github.com/donnemartin/system-design-primer#write-through",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://github.com/donnemartin/system-design-primer#write-behind-write-back",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://github.com/donnemartin/system-design-primer#refresh-ahead",target:"_blank",rel:"noopener noreferrer"},ir=e("h3",{id:"异步性和微服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#异步性和微服务","aria-hidden":"true"},"#"),r(" 异步性和微服务")],-1),or={href:"https://github.com/donnemartin/system-design-primer#message-queues",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://github.com/donnemartin/system-design-primer#task-queues",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://github.com/donnemartin/system-design-primer#back-pressure",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://github.com/donnemartin/system-design-primer#microservices",target:"_blank",rel:"noopener noreferrer"},dr=e("h3",{id:"沟通",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#沟通","aria-hidden":"true"},"#"),r(" 沟通")],-1),ur={href:"https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://github.com/donnemartin/system-design-primer#service-discovery",target:"_blank",rel:"noopener noreferrer"},mr=e("h3",{id:"安全性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安全性","aria-hidden":"true"},"#"),r(" 安全性")],-1),_r={href:"https://github.com/donnemartin/system-design-primer#security",target:"_blank",rel:"noopener noreferrer"},pr=e("h3",{id:"延迟数字指标",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#延迟数字指标","aria-hidden":"true"},"#"),r(" 延迟数字指标")],-1),br={href:"https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know",target:"_blank",rel:"noopener noreferrer"},fr=e("h3",{id:"正在进行",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#正在进行","aria-hidden":"true"},"#"),r(" 正在进行")],-1),yr=e("ul",null,[e("li",null,"继续基准测试并监控你的系统以解决出现的瓶颈问题"),e("li",null,"扩展是一个迭代的过程")],-1);function kr(xr,Sr){const n=o("ExternalLinkIcon");return s(),a("div",null,[e("blockquote",null,[e("ul",null,[e("li",null,[r("原文地址："),e("a",d,[r("github.com/donnemartin/system-design-primer"),t(n)])]),e("li",null,[r("译文出自："),e("a",u,[r("掘金翻译计划"),t(n)])]),e("li",null,[r("译者："),e("a",g,[r("XatMassacrE"),t(n)]),r("、"),e("a",c,[r("L9m"),t(n)]),r("、"),e("a",m,[r("Airmacho"),t(n)]),r("、"),e("a",_,[r("xiaoyusilen"),t(n)]),r("、"),e("a",p,[r("jifaxu"),t(n)]),r("、"),e("a",b,[r("根号三"),t(n)])])])]),f,e("p",null,[e("strong",null,[r("注释：为了避免重复，这篇文章的链接直接关联到 "),e("a",y,[r("系统设计主题"),t(n)]),r(" 的相关章节。为一讨论要点、折中方案和可选方案做参考。")])]),k,e("ul",null,[e("li",null,[x,r(" 在 EC2 上 "),e("ul",null,[S,e("li",null,[e("a",L,[Q,t(n)])])])])]),q,e("ul",null,[e("li",null,[W,r(" 的可选方案是 "),e("a",v,[I,t(n)])])]),M,P,w,e("ul",null,[e("li",null,[r("查阅 "),e("a",C,[r("关系型数据库管理系统 (RDBMS)"),t(n)]),r(" 章节")]),e("li",null,[r("讨论使用 "),e("a",A,[r("SQL 或 NoSQL"),t(n)]),r(" 的原因")])]),B,D,N,e("p",null,[r("添加 "),z,r(" 服务，比如 Route 53（"),e("a",T,[r("Amazon Route 53"),t(n)]),r(" - 译者注），将域映射到实例的公共 IP 中。")]),E,e("ul",null,[e("li",null,[r("查阅 "),e("a",R,[r("域名系统"),t(n)]),r(" 章节")])]),j,e("ul",null,[e("li",null,[r("查阅 "),e("a",H,[r("安全"),t(n)]),r(" 章节")])]),X,e("ul",null,[e("li",null,[r("查阅 "),e("a",O,[r("安全"),t(n)]),r(" 章节")])]),V,e("ul",null,[K,e("li",null,[r("使用 "),e("a",U,[F,t(n)]),r(" 来处理增加的负载和单点故障 "),e("ul",null,[e("li",null,[r("添加 "),e("a",J,[Z,t(n)]),r(" 例如 Amazon 的 ELB 或 HAProxy "),e("ul",null,[G,e("li",null,[r("如果你正在配置自己的 "),Y,r(", 在多个可用区域中设置多台服务器用于 "),e("a",$,[r("双活"),t(n)]),r(" 或 "),e("a",ee,[r("主被"),t(n)]),r(" 将提高可用性")]),re])]),ne,e("li",null,[r("在多个可用区域的 "),e("a",te,[le,t(n)]),r(" 模式中使用多个 "),ie,r(" 实例来改进冗余")])])]),e("li",null,[r("分离 "),oe,r(" 和 "),e("a",se,[ae,t(n)]),e("ul",null,[he,e("li",null,[de,r(" 可以作为 "),e("a",ue,[ge,t(n)])]),ce])]),e("li",null,[r("将静态（和一些动态）内容转移到 "),e("a",me,[_e,t(n)]),r(" 例如 CloudFront 以减少负载和延迟")])]),pe,e("ul",null,[be,e("li",null,[r("将下列数据移动到一个 "),e("a",fe,[ye,t(n)]),r("，例如弹性缓存，以减少负载和延迟： "),ke]),e("li",null,[r("添加 "),e("a",xe,[Se,t(n)]),r(" 来减少写主线程的负载")]),Le]),Qe,e("ul",null,[e("li",null,[r("查阅 "),e("a",qe,[r("关系型数据库管理系统 (RDBMS)"),t(n)]),r(" 章节")])]),We,e("ul",null,[e("li",null,[e("a",ve,[r("集合"),t(n)])]),e("li",null,[e("a",Ie,[r("分片"),t(n)])]),e("li",null,[e("a",Me,[r("反范式"),t(n)])]),e("li",null,[e("a",Pe,[r("SQL 调优"),t(n)])])]),e("p",null,[r("为了进一步处理高读和写请求，我们还应该考虑将适当的数据移动到一个 "),e("a",we,[Ce,t(n)]),r(" ，例如 DynamoDB。")]),e("p",null,[r("我们可以进一步分离我们的 "),e("a",Ae,[Be,t(n)]),r(" 以允许独立扩展。不需要实时完成的批处理任务和计算可以通过 Queues 和 Workers 异步完成：")]),De,e("ul",null,[e("li",null,[e("a",Ne,[r("读取副本"),t(n)])]),e("li",null,[e("a",ze,[r("集合"),t(n)])]),e("li",null,[e("a",Te,[r("分区"),t(n)])]),e("li",null,[e("a",Ee,[r("反规范化"),t(n)])]),e("li",null,[e("a",Re,[r("SQL 调优"),t(n)])])]),je,e("ul",null,[e("li",null,[e("a",He,[r("键值存储"),t(n)])]),e("li",null,[e("a",Xe,[r("文档存储"),t(n)])]),e("li",null,[e("a",Oe,[r("宽表存储"),t(n)])]),e("li",null,[e("a",Ve,[r("图数据库"),t(n)])]),e("li",null,[e("a",Ke,[r("SQL vs NoSQL"),t(n)])])]),Ue,e("ul",null,[e("li",null,[r("缓存到哪里 "),e("ul",null,[e("li",null,[e("a",Fe,[r("客户端缓存"),t(n)])]),e("li",null,[e("a",Je,[r("CDN 缓存"),t(n)])]),e("li",null,[e("a",Ze,[r("Web 服务缓存"),t(n)])]),e("li",null,[e("a",Ge,[r("数据库缓存"),t(n)])]),e("li",null,[e("a",Ye,[r("应用缓存"),t(n)])])])]),e("li",null,[r("缓存什么 "),e("ul",null,[e("li",null,[e("a",$e,[r("数据库请求层缓存"),t(n)])]),e("li",null,[e("a",er,[r("对象层缓存"),t(n)])])])]),e("li",null,[r("何时更新缓存 "),e("ul",null,[e("li",null,[e("a",rr,[r("预留缓存"),t(n)])]),e("li",null,[e("a",nr,[r("完全写入"),t(n)])]),e("li",null,[e("a",tr,[r("延迟写 (写回)"),t(n)])]),e("li",null,[e("a",lr,[r("事先更新"),t(n)])])])])]),ir,e("ul",null,[e("li",null,[e("a",or,[r("消息队列"),t(n)])]),e("li",null,[e("a",sr,[r("任务队列"),t(n)])]),e("li",null,[e("a",ar,[r("回退压力"),t(n)])]),e("li",null,[e("a",hr,[r("微服务"),t(n)])])]),dr,e("ul",null,[e("li",null,[r("关于折中方案的讨论: "),e("ul",null,[e("li",null,[r("客户端的外部通讯 - "),e("a",ur,[r("遵循 REST 的 HTTP APIs"),t(n)])]),e("li",null,[r("内部通讯 - "),e("a",gr,[r("RPC"),t(n)])])])]),e("li",null,[e("a",cr,[r("服务探索"),t(n)])])]),mr,e("p",null,[r("参考 "),e("a",_r,[r("安全章节"),t(n)])]),pr,e("p",null,[r("查阅 "),e("a",br,[r("每个程序员必懂的延迟数字"),t(n)])]),fr,yr])}const qr=i(h,[["render",kr],["__file","scaling_aws.html.vue"]]);export{qr as default};
